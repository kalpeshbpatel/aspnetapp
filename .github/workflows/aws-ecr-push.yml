name: Build and Dockerize
on:
  pull_request:
    types:
      - closed
    branches: [master]
  push:
    branches: [main]
jobs:
  build:
    if: github.ref_name != 'master' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate build id
        id: buildgen
        run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"

      - name: Create ECR Repository
        env:
          REPO_NAME: 'aspnetapp'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
        run: |
          aws ecr describe-repositories --repository-names ${REPO_NAME} --region ${AWS_DEFAULT_REGION} || aws ecr create-repository --region ${AWS_DEFAULT_REGION} --repository-name ${REPO_NAME}

      - name: Build, tag and push master branch image to Amazon ECR
        if: github.ref_name == 'master'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 'aspnetapp'
          IMAGE_TAG: ${{ steps.buildgen.outputs.BUILD_ID }}
        # working-directory: dozee/main
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest-${GITHUB_REF##*/} .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Build, tag and push sit branch image to Amazon ECR
        if: github.ref_name == 'main'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 'aspnetapp'
          IMAGE_TAG: ${{ steps.buildgen.outputs.BUILD_ID }}
        # working-directory: dozee/main
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest-${GITHUB_REF##*/} .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
